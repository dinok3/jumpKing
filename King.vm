function King.new 0
push constant 22
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 6
push argument 1
pop this 7
push constant 0
pop this 8
push argument 0
pop this 3
push argument 1
pop this 4
push constant 0
pop this 5
push constant 1
pop this 11
push constant 4
neg
pop this 12
push this 12
neg
push constant 1
add
pop this 13
push constant 0
pop this 14
push constant 0
pop this 15
push constant 132
pop this 10
push constant 132
pop this 9
push constant 0
pop this 20
push constant 8
pop this 0
push constant 256
pop this 2
push constant 10
call Array.new 1
pop this 21
push pointer 0
call King.render 1
pop temp 0
push pointer 0
return
function King.setX 0
push argument 0
pop pointer 0
push this 6
pop this 3
push argument 1
push this 1
call Utils.mod 2
pop this 6
push constant 0
return
function King.setY 0
push argument 0
pop pointer 0
push argument 1
push constant 30
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
push constant 30
sub
pop this 7
push pointer 0
call King.eraseResidue 1
pop temp 0
push constant 256
push constant 30
push argument 1
sub
sub
pop this 7
push constant 255
pop this 4
goto IF_END0
label IF_FALSE0
push argument 1
push constant 255
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 7
pop this 4
push constant 255
push constant 30
add
pop this 7
push pointer 0
call King.eraseResidue 1
pop temp 0
push constant 30
push argument 1
push constant 255
sub
add
pop this 7
push constant 30
pop this 4
goto IF_END1
label IF_FALSE1
push this 7
pop this 4
push argument 1
pop this 7
label IF_END1
label IF_END0
push constant 0
return
function King.setOffset 0
push argument 0
pop pointer 0
push this 8
pop this 5
push argument 1
push this 0
call Utils.mod 2
pop this 8
push constant 0
return
function King.setDirection 0
push argument 0
pop pointer 0
push this 9
push constant 131
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 9
pop this 10
label IF_FALSE0
push argument 1
pop this 9
push constant 0
return
function King.getX 0
push argument 0
pop pointer 0
push this 6
return
function King.getY 0
push argument 0
pop pointer 0
push this 7
return
function King.getOffset 0
push argument 0
pop pointer 0
push this 8
return
function King.refresh 0
push argument 0
pop pointer 0
push argument 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 2
call King.moveVertical 2
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push this 7
call King.setY 2
pop temp 0
label IF_END0
push this 9
push constant 131
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call King.moveSideways 1
pop temp 0
goto IF_END1
label IF_FALSE1
push pointer 0
push this 6
call King.setX 2
pop temp 0
push pointer 0
push this 8
call King.setOffset 2
pop temp 0
label IF_END1
push constant 0
return
function King.moveVertical 0
push argument 0
pop pointer 0
push this 15
push this 13
call Math.multiply 2
push argument 1
call Math.divide 2
pop this 14
push pointer 0
push this 7
push this 12
add
push this 14
add
call King.setY 2
pop temp 0
push this 15
push constant 1
add
pop this 15
push constant 0
return
function King.moveSideways 0
push argument 0
pop pointer 0
push this 10
push this 9
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 9
push constant 132
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 6
push constant 1
sub
call King.setX 2
pop temp 0
goto IF_END1
label IF_FALSE1
push pointer 0
push this 6
push constant 1
add
call King.setX 2
pop temp 0
label IF_END1
push this 0
push constant 1
sub
push this 8
sub
pop this 8
label IF_FALSE0
push pointer 0
push this 8
push this 11
add
call King.setOffset 2
pop temp 0
push this 8
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 9
push constant 130
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push this 6
push constant 1
sub
call King.setX 2
pop temp 0
goto IF_END3
label IF_FALSE3
push pointer 0
push this 6
push constant 1
add
call King.setX 2
pop temp 0
label IF_END3
goto IF_END2
label IF_FALSE2
push pointer 0
push this 6
call King.setX 2
pop temp 0
label IF_END2
push constant 0
return
function King.kingRender 1
push argument 0
pop pointer 0
push this 9
pop local 0
push local 0
push constant 131
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 10
pop local 0
label IF_FALSE0
push this 8
push constant 0
eq
push this 3
push this 6
eq
not
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 132
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push this 7
call Graphics.kingRight8 2
pop temp 0
goto IF_END2
label IF_FALSE2
push this 3
push this 7
call Graphics.kingLeft8 2
pop temp 0
label IF_END2
label IF_FALSE1
push this 8
push constant 0
eq
push this 3
push this 6
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 6
push this 7
call Graphics.kingIdle 2
pop temp 0
label IF_FALSE3
push this 8
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 132
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 6
push this 7
call Graphics.kingRight1 2
pop temp 0
goto IF_END5
label IF_FALSE5
push this 6
push this 7
call Graphics.kingLeft1 2
pop temp 0
label IF_END5
label IF_FALSE4
push this 8
push constant 2
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push constant 132
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 6
push this 7
call Graphics.kingRight2 2
pop temp 0
goto IF_END7
label IF_FALSE7
push this 6
push this 7
call Graphics.kingLeft2 2
pop temp 0
label IF_END7
label IF_FALSE6
push this 8
push constant 3
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push constant 132
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 6
push this 7
call Graphics.kingRight3 2
pop temp 0
goto IF_END9
label IF_FALSE9
push this 6
push this 7
call Graphics.kingLeft3 2
pop temp 0
label IF_END9
label IF_FALSE8
push this 8
push constant 4
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 0
push constant 132
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push this 6
push this 7
call Graphics.kingRight4 2
pop temp 0
goto IF_END11
label IF_FALSE11
push this 6
push this 7
call Graphics.kingLeft4 2
pop temp 0
label IF_END11
label IF_FALSE10
push this 8
push constant 5
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 0
push constant 132
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push this 6
push this 7
call Graphics.kingRight5 2
pop temp 0
goto IF_END13
label IF_FALSE13
push this 6
push this 7
call Graphics.kingLeft5 2
pop temp 0
label IF_END13
label IF_FALSE12
push this 8
push constant 6
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 0
push constant 132
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push this 6
push this 7
call Graphics.kingRight6 2
pop temp 0
goto IF_END15
label IF_FALSE15
push this 6
push this 7
call Graphics.kingLeft6 2
pop temp 0
label IF_END15
label IF_FALSE14
push this 8
push constant 7
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 0
push constant 132
eq
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push this 6
push this 7
call Graphics.kingRight7 2
pop temp 0
goto IF_END17
label IF_FALSE17
push this 6
push this 7
call Graphics.kingLeft7 2
pop temp 0
label IF_END17
label IF_FALSE16
push constant 0
return
function King.eraseResidue 6
push argument 0
pop pointer 0
push this 9
pop local 5
push local 5
push constant 131
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 10
pop local 5
label IF_FALSE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 5
push constant 132
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push constant 16
call Math.multiply 2
push this 5
add
pop local 0
push this 3
push constant 2
add
push constant 16
call Math.multiply 2
push this 5
push constant 2
call Math.multiply 2
add
pop local 2
goto IF_END1
label IF_FALSE1
push this 3
push constant 16
call Math.multiply 2
push this 5
push constant 2
call Math.multiply 2
sub
push constant 2
sub
pop local 0
push this 3
push constant 2
add
push constant 16
call Math.multiply 2
push this 5
sub
pop local 2
label IF_END1
push this 14
push this 12
call Math.abs 1
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 7
pop local 1
push this 4
pop local 3
push this 14
push this 12
call Math.abs 1
gt
push local 1
push constant 30
gt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 4
push constant 30
sub
pop local 1
push this 7
push constant 30
sub
pop local 3
label IF_FALSE3
push local 2
push constant 511
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
push local 1
push local 2
push constant 511
sub
push local 3
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE4
push local 0
push constant 0
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 511
push local 0
add
push local 1
push constant 511
push local 3
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE5
push local 0
push constant 0
call Utils.max 2
pop local 0
push local 2
push constant 511
call Utils.min 2
pop local 2
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE2
push constant 0
return
function King.render 0
push argument 0
pop pointer 0
push pointer 0
call King.kingRender 1
pop temp 0
push this 4
push this 7
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call King.eraseResidue 1
pop temp 0
label IF_FALSE0
push constant 0
return
function King.computeHitbox 0
push argument 0
pop pointer 0
push this 9
push constant 132
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push constant 16
call Math.multiply 2
push this 8
push constant 2
call Math.multiply 2
add
push constant 2
add
push constant 512
call Utils.mod 2
pop this 16
push this 7
push constant 29
sub
pop this 17
push constant 24
pop this 18
push constant 29
pop this 19
goto IF_END0
label IF_FALSE0
push this 6
push constant 16
call Math.multiply 2
push this 8
push constant 2
call Math.multiply 2
sub
push constant 1
add
pop this 16
push this 7
push constant 29
sub
pop this 17
push constant 24
pop this 18
push constant 29
pop this 19
label IF_END0
push constant 0
return
function King.checkForCollisions 2
push argument 0
pop pointer 0
push pointer 0
call King.computeHitbox 1
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 3
lt
not
if-goto WHILE_END0
push local 0
push argument 1
add
pop pointer 1
push that 0
pop local 1
push local 1
call Platform.getX 1
push this 16
push this 18
add
lt
push local 1
call Platform.getX 1
push local 1
call Platform.getWidth 1
add
push this 16
gt
and
push local 1
call Platform.getY 1
push constant 1
sub
push this 17
push this 19
add
push constant 1
add
lt
and
push local 1
call Platform.getY 1
push local 1
call Platform.getHeight 1
add
push constant 1
add
push this 17
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push local 1
call Platform.getY 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Platform.getY 1
push constant 1
sub
pop this 7
push constant 0
pop this 15
push constant 0
not
pop this 20
push local 1
call Platform.getY 1
call Output.printInt 1
pop temp 0
goto IF_END1
label IF_FALSE1
push this 5
pop this 8
push this 3
pop this 6
push this 4
push constant 29
sub
push local 1
call Platform.getY 1
push local 1
call Platform.getHeight 1
add
gt
push this 4
push constant 29
sub
push local 1
call Platform.getY 1
push local 1
call Platform.getHeight 1
add
eq
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
pop this 7
push this 12
neg
push constant 1
add
push constant 60
call Math.multiply 2
push this 13
call Math.divide 2
pop this 15
push pointer 0
push constant 60
call King.moveVertical 2
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printChar 1
pop temp 0
push constant 3
call String.new 1
push constant 104
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 4
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printChar 1
pop temp 0
push this 7
call Output.printInt 1
pop temp 0
goto IF_END2
label IF_FALSE2
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printChar 1
pop temp 0
push constant 3
call String.new 1
push constant 97
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 4
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printChar 1
pop temp 0
push local 1
call Platform.getY 1
push local 1
call Platform.getHeight 1
add
call Output.printInt 1
pop temp 0
push pointer 0
push constant 130
push constant 132
push this 9
sub
add
call King.setDirection 2
pop temp 0
push this 12
push constant 1
add
pop this 12
label IF_END2
push this 9
push constant 131
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call King.moveSideways 1
pop temp 0
label IF_FALSE3
label IF_END1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 2
push constant 0
eq
push this 20
not
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
pop this 12
push constant 60
pop this 15
push pointer 0
push constant 60
call King.moveVertical 2
pop temp 0
label IF_FALSE4
push constant 0
return
function King.jump 2
push argument 0
pop pointer 0
push constant 10000
push argument 4
call Math.divide 2
call Utils.round 1
pop local 0
push argument 3
pop this 1
push this 12
push argument 1
call Utils.round 1
call Math.multiply 2
push constant 10
call Math.divide 2
pop this 12
push pointer 0
push argument 2
call King.setDirection 2
pop temp 0
push constant 0
pop this 20
label WHILE_EXP0
push this 20
not
not
if-goto WHILE_END0
push pointer 0
push argument 1
push argument 4
call King.refresh 3
pop temp 0
push pointer 0
push argument 5
push argument 1
call King.checkForCollisions 3
pop temp 0
push pointer 0
call King.render 1
pop temp 0
push constant 0
push argument 5
add
pop pointer 1
push that 0
pop local 1
push local 1
call Platform.draw 1
pop temp 0
push constant 1
push argument 5
add
pop pointer 1
push that 0
pop local 1
push local 1
call Platform.draw 1
pop temp 0
push constant 2
push argument 5
add
pop pointer 1
push that 0
pop local 1
push local 1
call Platform.draw 1
pop temp 0
push pointer 0
push this 9
call King.setDirection 2
pop temp 0
push local 0
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 4
neg
pop this 12
push constant 0
return
function King.dispose 0
push argument 0
pop pointer 0
push this 21
call Memory.deAlloc 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
