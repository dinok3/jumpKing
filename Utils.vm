function Utils.mod 0
push argument 1
call Math.abs 1
pop argument 1
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 0
add
pop argument 0
label IF_FALSE0
push argument 0
push argument 1
push argument 0
push argument 1
call Math.divide 2
call Math.multiply 2
sub
return
function Utils.clamp 0
push argument 0
push constant 25
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 0
push constant 50
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 25
return
label IF_FALSE1
push argument 0
push constant 75
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 50
return
label IF_FALSE2
push argument 0
push constant 100
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 75
return
goto IF_END3
label IF_FALSE3
push constant 100
return
label IF_END3
function Utils.round 0
push argument 0
push constant 10
call Utils.mod 2
push constant 4
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push constant 10
call Math.divide 2
push constant 1
add
return
goto IF_END0
label IF_FALSE0
push argument 0
push constant 10
call Math.divide 2
return
label IF_END0
function Utils.min 0
push argument 0
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
return
function Utils.max 0
push argument 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
return
